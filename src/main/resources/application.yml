spring:
  application:
    name: kafka-demo
  kafka:
    bootstrap-servers: localhost:9092
    properties:
      schema.registry.url: http://localhost:8081
#      basic.auth.credentials.source: dummy
#      basic.auth.user.info: dummy
#      specific.avro.reader: true
    streams:
      application-id: kafka-demo
      properties:
        replication.factor: 1
        num.stream.threads: 1
        state.dir: ./build/tmp/state-dir
        processing.guarantee: exactly_once_v2
        default.key.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        default.value.serde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
        application.server: ${SERVER_HOST:localhost}:${SERVER_PORT:8080}

logging:
  level:
    root: INFO

server:
  host: ${SERVER_HOST:localhost}
  port: ${SERVER_PORT:8080}

demo-streams:
  mapping-app-id: map-app
  dedupe-app-id: dedupe-app
  fk-lookup-by-global-store-app-id: fk-lookup-by-global-store-app
  fk-lookup-by-global-ktable-app-id: fk-lookup-by-global-ktable-app
  fk-lookup-by-regular-store-app-id: fk-lookup-by-regular-store-app
  fk-lookup-by-joining-app-id: fk-lookup-by-joining-app
  scheduled-job-app-id: scheduled-job-app
  short-id-registry-app-id: short-id-registry-app
  short-id-lookup-app-id: short-id-lookup-app
  dual-join-app-id: dual-joining-app
  schedule-interval: PT5M
  order-topic: order
  customer-topic: customer
  order-deduped-topic: order-deduped
  order-enriched-by-global-store-topic: order-enriched-by-global-store
  order-enriched-by-global-ktable-topic: order-enriched-by-global-ktable
  order-enriched-by-regular-store-topic: order-enriched-by-regular-store
  order-enriched-by-joining-topic: order-enriched-by-joining
  customer-order-batch-topic: customer-order-batch
  long-id-topic: long-id
  long-id-to-short-id-topic: long-id-to-short-id
  short-id-to-long-id-topic: short-id-to-long-id
  preference-topic: preference
  contact-topic: contact
  enriched-preference-topic: preference-enriched
